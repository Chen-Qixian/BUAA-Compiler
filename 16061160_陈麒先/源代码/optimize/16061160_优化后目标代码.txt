.globl main
.data
str_0: .asciiz " test_expression c=\n"
str_1: .asciiz " test_if output the less one \n"
str_2: .asciiz "output \n"
str_3: .asciiz " test_while output a[0] a[1] a[2]:\n"
str_4: .asciiz "  \n"
str_5: .asciiz "  \n"
str_6: .asciiz " test_switch input one char:a or b  \n"
str_7: .asciiz "  \n"
str_8: .asciiz " \n"
str_9: .asciiz "  \n"
str_10: .asciiz " \n"
str_11: .asciiz " enter:\n"
str_12: .asciiz "  \n"
str_13: .asciiz "  \n"
str_14: .asciiz "  \n"
str_15: .asciiz "error input!@#$%%^&/|\\{[('')]}~\n"
.text
func_expre:
move $fp $sp
subi $sp $sp 64
li $t1 1
lw $t2 268501244
addu $t0 $t1 $t2
sw $t0 -20($fp)
lw $t0 -20($fp)
sw $t0 268501244
li $t0 0
sw $t0 268501224
lw $t0 268501244
li $t1 3
bge $t0 $t1 if_1_else
lw $t1 0($fp)
lw $t2 -4($fp)
addu $t0 $t1 $t2
sw $t0 -24($fp)
lw $t1 -24($fp)
lw $t2 -8($fp)
mul $t0 $t1 $t2
sw $t0 -28($fp)
lw $t1 -12($fp)
lw $t2 -16($fp)
mul $t0 $t1 $t2
sw $t0 -32($fp)
lw $t0 0($fp)
sw $t0 0($sp)
lw $t0 -4($fp)
sw $t0 -4($sp)
lw $t0 -8($fp)
sw $t0 -8($sp)
lw $t0 -12($fp)
sw $t0 -12($sp)
lw $t0 -16($fp)
sw $t0 -16($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_expre
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -36($fp)
li $t1 1
lw $t2 -28($fp)
sub $t0 $t1 $t2
sw $t0 -40($fp)
lw $t1 -40($fp)
lw $t2 -32($fp)
sub $t0 $t1 $t2
sw $t0 -44($fp)
lw $t1 -44($fp)
li $t2 98
addu $t0 $t1 $t2
sw $t0 -48($fp)
lw $t1 -48($fp)
lw $t2 -36($fp)
addu $t0 $t1 $t2
sw $t0 -52($fp)
lw $t0 -52($fp)
sw $t0 268501224
if_1_else:
la $a0 str_0
li $v0 4
syscall
lw $a0 268501224
li $v0 1
syscall
lw $v0 268501224
addi $sp $sp 64
jr $ra
func_test_if:
move $fp $sp
subi $sp $sp 20
li $t0 0
sw $t0 -8($fp)
lw $t0 0($fp)
lw $t1 -4($fp)
blt $t0 $t1 if_2_else
while_1_beg:
lw $t0 0($fp)
lw $t1 -4($fp)
ble $t0 $t1 while_1_end
lw $t0 0($fp)
sw $t0 -8($fp)
lw $t0 -4($fp)
sw $t0 0($fp)
lw $t0 -8($fp)
sw $t0 -4($fp)
j while_1_beg
while_1_end:
lw $t0 0($fp)
lw $t1 -4($fp)
bne $t0 $t1 if_3_else
if_3_else:
if_2_else:
lw $t0 0($fp)
lw $t1 -4($fp)
bge $t0 $t1 if_4_else
if_4_else:
la $a0 str_1
li $v0 4
syscall
la $a0 str_2
li $v0 4
syscall
lw $a0 0($fp)
li $v0 1
syscall
addi $sp $sp 20
jr $ra
func_test_while:
move $fp $sp
subi $sp $sp 24
li $t0 0
sw $t0 268501244
li $t0 0
sw $t0 268501232
li $t0 0
sw $t0 268501236
li $t0 0
sw $t0 268501240
while_2_beg:
lw $t0 268501244
li $t1 3
bgt $t0 $t1 while_2_end
lw $t0 268501244
li $t1 2
beq $t0 $t1 if_5_else
if_5_else:
lw $t0 268501244
li $t1 2
bne $t0 $t1 if_6_else
lw $t1 268501244
lw $t2 268501244
mul $t0 $t1 $t2
sw $t0 0($fp)
lw $t1 268501244
lw $t2 0($fp)
addu $t0 $t1 $t2
sw $t0 -4($fp)
lw $t0 -4($fp)
lw $t1 268501244
mul $t1 $t1 4
addi $t1 $t1 268501232
sw $t0 0($t1)
li $t1 1
lw $t2 268501244
addu $t0 $t1 $t2
sw $t0 -8($fp)
lw $t0 -8($fp)
sw $t0 268501244
if_6_else:
li $t1 1
lw $t2 268501244
addu $t0 $t1 $t2
sw $t0 -12($fp)
lw $t0 -12($fp)
sw $t0 268501244
j while_2_beg
while_2_end:
la $a0 str_3
li $v0 4
syscall
lw $a0 268501232
li $v0 1
syscall
la $a0 str_4
li $v0 4
syscall
lw $a0 268501236
li $v0 1
syscall
la $a0 str_5
li $v0 4
syscall
lw $a0 268501240
li $v0 1
syscall
addi $sp $sp 24
jr $ra
func_test_switch:
move $fp $sp
subi $sp $sp 12
la $a0 str_6
li $v0 4
syscall
li $v0 12
syscall
sw $v0 0($fp)
lw $t0 0($fp)
li $t1 97
bne $t0 $t1 case_1_1_end
la $a0 str_7
li $v0 4
syscall
li $a0 97
li $v0 1
syscall
la $a0 str_8
li $v0 4
syscall
li $a0 162
li $v0 1
syscall
j case_1_end
case_1_1_end:
lw $t0 0($fp)
li $t1 98
bne $t0 $t1 case_1_2_end
la $a0 str_9
li $v0 4
syscall
li $a0 98
li $v0 1
syscall
la $a0 str_10
li $v0 4
syscall
li $a0 164
li $v0 1
syscall
j case_1_end
case_1_2_end:
case_1_end:
li $v0 70
addi $sp $sp 12
jr $ra
func_fun1:
move $fp $sp
subi $sp $sp 20
lw $t1 0($fp)
lw $t2 -4($fp)
sub $t0 $t1 $t2
sw $t0 -8($fp)
lw $v0 -8($fp)
addi $sp $sp 20
jr $ra
func_test_scanf_printf:
move $fp $sp
subi $sp $sp 24
la $a0 str_11
li $v0 4
syscall
li $v0 12
syscall
sw $v0 0($fp)
li $v0 12
syscall
sw $v0 -4($fp)
la $a0 str_12
li $v0 4
syscall
lw $t0 0($fp)
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_fun1
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -8($fp)
lw $a0 -8($fp)
li $v0 1
syscall
la $a0 str_13
li $v0 4
syscall
lw $t0 -4($fp)
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_fun1
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -12($fp)
lw $a0 -12($fp)
li $v0 1
syscall
addi $sp $sp 24
jr $ra
func_test_return:
move $fp $sp
subi $sp $sp 12
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_switch
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 0($fp)
lw $v0 0($fp)
addi $sp $sp 12
jr $ra
func_test:
move $fp $sp
subi $sp $sp 20
li $v0 5
syscall
sw $v0 0($fp)
lw $t0 0($fp)
li $t1 1
bne $t0 $t1 case_2_1_end
li $t0 0
sw $t0 268501244
li $t0 2
sw $t0 0($sp)
li $t0 3
sw $t0 -4($sp)
li $t0 4
sw $t0 -8($sp)
li $t0 5
sw $t0 -12($sp)
li $t0 6
sw $t0 -16($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_expre
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_1_end:
lw $t0 0($fp)
li $t1 2
bne $t0 $t1 case_2_2_end
li $t0 2
sw $t0 0($sp)
li $t0 3
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_if
lw $ra 4($sp)
lw $fp 8($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_while
lw $ra 4($sp)
lw $fp 8($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_switch
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_2_end:
lw $t0 0($fp)
li $t1 3
bne $t0 $t1 case_2_3_end
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_scanf_printf
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_3_end:
lw $t0 0($fp)
li $t1 4
bne $t0 $t1 case_2_4_end
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_return
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -8($fp)
lw $t0 -8($fp)
sw $t0 -4($fp)
la $a0 str_14
li $v0 4
syscall
lw $a0 -4($fp)
li $v0 11
syscall
j case_2_end
case_2_4_end:
la $a0 str_15
li $v0 4
syscall
case_2_end:
addi $sp $sp 20
jr $ra
main:
move $fp $sp
subi $sp $sp 8
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test
lw $ra 4($sp)
lw $fp 8($sp)
li $v0 10
syscall
