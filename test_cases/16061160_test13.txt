const char cha='a',chb='b';
const char CHA='A',CHB='B';
const int I=3;
int c,d;
int abc[3],i;

int expre(int a,int b,int x,int y,int z){
    {{{{{;};};};};}
    i=i+1;
    c=0;
    if(i<I)
        c=-(a+b)*x-y*z--1+'b'+expre(a,b,x,y,z);    
    printf(" test_expression c=",c);
    return(c);
}
void test_if(int a,int b){
    int temp;
    temp=0;
    if(a>=b){
        while(a>b){
            temp=a;
            a=b;
            b=temp;
        }
        if(a==b);        
    }
    if(a<b);
    printf(" test_if output the less one ");
    printf("output ",a);
}
void test_while(){
    i=0;
    abc[0]=0;
    abc[1]=0;
    abc[2]=0;
    while(i<=3){
        if(i!=2);
        if(i==2){
            abc[i]=i+i*i;
            i=i+1; 
        }
        i=i+1;
    }
    printf(" test_while output a[0] a[1] a[2]:");
    printf(abc[0]);
    printf("  ");
    printf(abc[1]);
    printf("  ");
    printf(abc[2]);
}
char test_switch(){
    char flag;
    printf(" test_switch input one char:a or b  ");
    scanf(flag);
    switch(flag){
        case 'a':{
            printf("  ");
            printf(cha);
            printf(" ");
            printf(CHA+cha);
        }    
        case 'b':{
            printf("  ");
            printf(chb);
            printf(" ");
            printf(CHB+chb);        
        }
    }
    return('F');
}
int fun1(char a, int b){
    return(a - b);
}
void test_scanf_printf(){
    char a,b;
    printf(" enter:");
     scanf(a,b);
    printf("  ");
       printf(fun1(a, 32));
    printf("  ");
        printf(fun1(b, 32));
}
char test_return(){
    return(test_switch());
}
void test(){
    int flag;
    char ch;
    scanf(flag);
    switch(flag){
        case 1:{
            i=0;
            expre(2,3,4,5,6);
        }    
        case 2:{
            test_if(2,3);
            test_while();
            test_switch();
        }
        case 3:
            test_scanf_printf();        
        case 4:{            
            ch=test_return();
            printf("  ");
            printf(ch);
        }    
        default:printf("error input!@#$%%^&/|\{[('')]}~");
    }
}
void main(){       
    test();
}