.globl main
.data
str_0: .asciiz "success!\n"
str_1: .asciiz "fail!\n"
str_2: .asciiz "success1!\n"
str_3: .asciiz "success2!\n"
str_4: .asciiz "fail1!\n"
str_5: .asciiz "success!\n"
str_6: .asciiz "fail!\n"
str_7: .asciiz "success!\n"
str_8: .asciiz "fail!\n"
str_9: .asciiz "Input is:\n"
str_10: .asciiz " x==y:true\n"
str_11: .asciiz " x>y:true\n"
str_12: .asciiz " x<y:true\n"
str_13: .asciiz " x>=y:true\n"
str_14: .asciiz " x<=y:true\n"
str_15: .asciiz " x!=y:true\n"
str_16: .asciiz "success!\n"
str_17: .asciiz "fail!\n"
str_18: .asciiz "fail1!\n"
str_19: .asciiz "success!\n"
str_20: .asciiz "fail2!\n"
str_21: .asciiz "the local scope_var = \n"
str_22: .asciiz "the global scope_var = \n"
str_23: .asciiz "the global scope_var = \n"
str_24: .asciiz "success!\n"
str_25: .asciiz "fail!\n"
str_26: .asciiz "test_recursion begin:\n"
str_27: .asciiz "test_if begin:\n"
str_28: .asciiz "test_while begin:\n"
str_29: .asciiz "test_switch begin:\n"
str_30: .asciiz "test_scanf_printf begin:\n"
str_31: .asciiz "test_expression begin:\n"
str_32: .asciiz "test_symbol begin:\n"
str_33: .asciiz "test_relation_operator begin:\n"
str_34: .asciiz "test_scope begin:\n"
str_35: .asciiz "*********************\n"
str_36: .asciiz "ch=\n"
str_37: .asciiz "@#$$&*^^^^test end\n"
str_newline: .asciiz "\n"
.text
func_Fibonacci:
move $fp $sp
subi $sp $sp 32
lw $t0 0($fp)
li $t1 1
bne $t0 $t1 if_1_else
li $v0 1
addi $sp $sp 32
jr $ra
if_1_else:
lw $t0 0($fp)
li $t1 2
bne $t0 $t1 if_2_else
li $v0 1
addi $sp $sp 32
jr $ra
if_2_else:
li $t1 -1
lw $t2 0($fp)
add $t0 $t1 $t2
sw $t0 -4($fp)
lw $t0 -4($fp)
sw $t0 0($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_Fibonacci
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -8($fp)
li $t1 -2
lw $t2 0($fp)
add $t0 $t1 $t2
sw $t0 -12($fp)
lw $t0 -12($fp)
sw $t0 0($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_Fibonacci
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -16($fp)
lw $t1 -8($fp)
lw $t2 -16($fp)
add $t0 $t1 $t2
sw $t0 -20($fp)
lw $v0 -20($fp)
addi $sp $sp 32
jr $ra
func_test_recursion:
move $fp $sp
subi $sp $sp 12
li $t0 8
sw $t0 0($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_Fibonacci
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 0($fp)
lw $t0 0($fp)
li $t1 21
bne $t0 $t1 if_3_else
la $a0 str_0
li $v0 4
syscall
li $v0 0
addi $sp $sp 12
jr $ra
if_3_else:
la $a0 str_1
li $v0 4
syscall
li $v0 0
addi $sp $sp 12
jr $ra
func_test_if:
move $fp $sp
subi $sp $sp 20
li $t0 97
sw $t0 -4($fp)
lw $t1 -4($fp)
lw $t2 0($fp)
add $t0 $t1 $t2
sw $t0 -8($fp)
lw $t0 -8($fp)
li $t1 103
ble $t0 $t1 if_4_else
la $a0 str_2
li $v0 4
syscall
if_4_else:
lw $t0 -4($fp)
beqz $t0 if_5_else
la $a0 str_3
li $v0 4
syscall
if_5_else:
li $t0 0
beqz $t0 if_6_else
la $a0 str_4
li $v0 4
syscall
if_6_else:
li $v0 0
addi $sp $sp 20
jr $ra
func_test_while:
move $fp $sp
subi $sp $sp 24
li $t0 0
sw $t0 0($fp)
li $t0 0
sw $t0 268501576
while_1_beg:
lw $t0 268501576
li $t1 100
bge $t0 $t1 while_1_end
lw $t0 268501576
lw $t1 268501576
mul $t1 $t1 4
addi $t1 $t1 268501584
sw $t0 0($t1)
li $t1 1
lw $t2 268501576
add $t0 $t1 $t2
sw $t0 -4($fp)
lw $t0 -4($fp)
sw $t0 268501576
j while_1_beg
while_1_end:
li $t0 0
sw $t0 268501576
while_2_beg:
lw $t0 268501576
li $t1 100
bge $t0 $t1 while_2_end
lw $t1 0($fp)
lw $t2 268501576
add $t0 $t1 $t2
sw $t0 -8($fp)
lw $t0 -8($fp)
sw $t0 0($fp)
li $t1 1
lw $t2 268501576
add $t0 $t1 $t2
sw $t0 -12($fp)
lw $t0 -12($fp)
sw $t0 268501576
j while_2_beg
while_2_end:
lw $t0 0($fp)
li $t1 4950
bne $t0 $t1 if_7_else
la $a0 str_5
li $v0 4
syscall
addi $sp $sp 24
jr $ra
if_7_else:
la $a0 str_6
li $v0 4
syscall
addi $sp $sp 24
jr $ra
func_test_switch:
move $fp $sp
subi $sp $sp 12
li $t0 97
sw $t0 0($fp)
lw $t0 0($fp)
li $t1 97
bne $t0 $t1 case_1_1_end
la $a0 str_7
li $v0 4
syscall
j case_1_end
case_1_1_end:
la $a0 str_8
li $v0 4
syscall
case_1_end:
addi $sp $sp 12
jr $ra
func_to_upper:
move $fp $sp
subi $sp $sp 20
lw $t1 0($fp)
lw $t2 -4($fp)
sub $t0 $t1 $t2
sw $t0 -8($fp)
lw $v0 -8($fp)
addi $sp $sp 20
jr $ra
func_test_scanf_printf:
move $fp $sp
subi $sp $sp 32
li $v0 12
syscall
sw $v0 0($fp)
li $v0 12
syscall
sw $v0 -4($fp)
li $v0 12
syscall
sw $v0 -8($fp)
la $a0 str_9
li $v0 4
syscall
lw $a0 0($fp)
li $v0 11
syscall
la $a0 str_newline
li $v0 4
syscall
lw $a0 -4($fp)
li $v0 11
syscall
la $a0 str_newline
li $v0 4
syscall
lw $a0 -8($fp)
li $v0 11
syscall
la $a0 str_newline
li $v0 4
syscall
lw $t0 0($fp)
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_to_upper
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -12($fp)
lw $a0 -12($fp)
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
lw $t0 -4($fp)
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_to_upper
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -16($fp)
lw $a0 -16($fp)
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
lw $t0 -8($fp)
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_to_upper
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -20($fp)
lw $a0 -20($fp)
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
addi $sp $sp 32
jr $ra
func_test_relation_operator:
move $fp $sp
subi $sp $sp 16
lw $t0 0($fp)
lw $t1 -4($fp)
bne $t0 $t1 if_8_else
la $a0 str_10
li $v0 4
syscall
if_8_else:
lw $t0 0($fp)
lw $t1 -4($fp)
ble $t0 $t1 if_9_else
la $a0 str_11
li $v0 4
syscall
if_9_else:
lw $t0 0($fp)
lw $t1 -4($fp)
bge $t0 $t1 if_10_else
la $a0 str_12
li $v0 4
syscall
if_10_else:
lw $t0 0($fp)
lw $t1 -4($fp)
blt $t0 $t1 if_11_else
la $a0 str_13
li $v0 4
syscall
if_11_else:
lw $t0 0($fp)
lw $t1 -4($fp)
bgt $t0 $t1 if_12_else
la $a0 str_14
li $v0 4
syscall
if_12_else:
lw $t0 0($fp)
lw $t1 -4($fp)
beq $t0 $t1 if_13_else
la $a0 str_15
li $v0 4
syscall
if_13_else:
addi $sp $sp 16
jr $ra
func_test_expression:
move $fp $sp
subi $sp $sp 72
li $t0 10
sw $t0 0($fp)
li $t0 1
sw $t0 -4($fp)
li $t0 2
sw $t0 -12($fp)
li $t1 1
lw $t2 0($fp)
mul $t0 $t1 $t2
sw $t0 -16($fp)
lw $t1 -16($fp)
lw $t2 -12($fp)
mul $t0 $t1 $t2
sw $t0 -20($fp)
li $t1 0
lw $t2 -4($fp)
sub $t0 $t1 $t2
sw $t0 -24($fp)
lw $t1 -20($fp)
lw $t2 -24($fp)
mul $t0 $t1 $t2
sw $t0 -28($fp)
lw $t1 -28($fp)
lw $t2 -4($fp)
mul $t0 $t1 $t2
sw $t0 -32($fp)
lw $t1 -32($fp)
li $t2 2
div $t0 $t1 $t2
sw $t0 -36($fp)
li $t0 97
sw $t0 0($sp)
li $t0 32
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_to_upper
lw $ra 4($sp)
lw $fp 8($sp)
sw $v0 -40($fp)
li $t1 0
lw $t2 -36($fp)
sub $t0 $t1 $t2
sw $t0 -44($fp)
lw $t1 -44($fp)
li $t2 42
add $t0 $t1 $t2
sw $t0 -48($fp)
lw $t1 -48($fp)
lw $t2 -40($fp)
add $t0 $t1 $t2
sw $t0 -52($fp)
lw $t1 -52($fp)
li $t2 65
sub $t0 $t1 $t2
sw $t0 -56($fp)
lw $t1 0($fp)
lw $t2 -56($fp)
add $t0 $t1 $t2
sw $t0 -60($fp)
lw $t0 -60($fp)
sw $t0 -8($fp)
lw $t0 -8($fp)
li $t1 62
bne $t0 $t1 if_14_else
la $a0 str_16
li $v0 4
syscall
addi $sp $sp 72
jr $ra
if_14_else:
la $a0 str_17
li $v0 4
syscall
addi $sp $sp 72
jr $ra
func_test_symbol:
move $fp $sp
subi $sp $sp 216
li $t0 42
sw $t0 0($fp)
li $t0 47
sw $t0 -4($fp)
li $t0 43
sw $t0 -8($fp)
li $t0 45
sw $t0 -12($fp)
li $t0 95
sw $t0 -16($fp)
li $t0 1
sw $t0 -20($fp)
li $t0 0
sw $t0 -24($fp)
lw $t0 -20($fp)
li $t1 0
bne $t0 $t1 if_15_else
la $a0 str_18
li $v0 4
syscall
if_15_else:
li $t0 0
sw $t0 -148($fp)
lw $t1 0($fp)
lw $t2 -4($fp)
add $t0 $t1 $t2
sw $t0 -156($fp)
lw $t1 -156($fp)
lw $t2 -8($fp)
add $t0 $t1 $t2
sw $t0 -160($fp)
lw $t1 -160($fp)
lw $t2 -12($fp)
add $t0 $t1 $t2
sw $t0 -164($fp)
lw $t1 -164($fp)
lw $t2 -16($fp)
add $t0 $t1 $t2
sw $t0 -168($fp)
lw $t0 -168($fp)
sw $t0 -152($fp)
while_3_beg:
lw $t0 -148($fp)
li $t1 10
bge $t0 $t1 while_3_end
lw $t0 -148($fp)
lw $t1 -148($fp)
mul $t1 $t1 -4
addi $t1 $t1 -28
add $t1 $t1 $fp
sw $t0 0($t1)
li $t1 1
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -172($fp)
lw $t0 -172($fp)
sw $t0 -148($fp)
j while_3_beg
while_3_end:
while_4_beg:
lw $t0 -148($fp)
li $t1 20
bge $t0 $t1 while_4_end
li $t1 -10
li $t2 97
add $t0 $t1 $t2
sw $t0 -176($fp)
lw $t1 -176($fp)
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -180($fp)
lw $t0 -180($fp)
lw $t1 -148($fp)
mul $t1 $t1 -4
addi $t1 $t1 -28
add $t1 $t1 $fp
sw $t0 0($t1)
li $t1 1
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -184($fp)
lw $t0 -184($fp)
sw $t0 -148($fp)
j while_4_beg
while_4_end:
while_5_beg:
lw $t0 -148($fp)
li $t1 30
bge $t0 $t1 while_5_end
li $t1 -20
li $t2 65
add $t0 $t1 $t2
sw $t0 -188($fp)
lw $t1 -188($fp)
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -192($fp)
lw $t0 -192($fp)
lw $t1 -148($fp)
mul $t1 $t1 -4
addi $t1 $t1 -28
add $t1 $t1 $fp
sw $t0 0($t1)
li $t1 1
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -196($fp)
lw $t0 -196($fp)
sw $t0 -148($fp)
j while_5_beg
while_5_end:
li $t0 0
sw $t0 -148($fp)
while_6_beg:
lw $t0 -148($fp)
li $t1 30
bge $t0 $t1 while_6_end
lw $t1 -152($fp)
lw $t0 -148($fp)
mul $t0 $t0 -4
addi $t0 $t0 -28
add $t0 $t0 $fp
lw $t2 0($t0)
add $t0 $t1 $t2
sw $t0 -200($fp)
lw $t0 -200($fp)
sw $t0 -152($fp)
li $t1 1
lw $t2 -148($fp)
add $t0 $t1 $t2
sw $t0 -204($fp)
lw $t0 -204($fp)
sw $t0 -148($fp)
j while_6_beg
while_6_end:
lw $t0 -152($fp)
li $t1 2027
bne $t0 $t1 if_16_else
la $a0 str_19
li $v0 4
syscall
addi $sp $sp 216
jr $ra
if_16_else:
la $a0 str_20
li $v0 4
syscall
addi $sp $sp 216
jr $ra
func_local_scope:
move $fp $sp
subi $sp $sp 12
li $t0 10
sw $t0 0($fp)
la $a0 str_21
li $v0 4
syscall
lw $a0 0($fp)
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
addi $sp $sp 12
jr $ra
func_test_scope:
move $fp $sp
subi $sp $sp 12
li $t0 20
sw $t0 268501984
lw $t0 268501984
sw $t0 0($fp)
la $a0 str_22
li $v0 4
syscall
lw $a0 268501984
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_local_scope
lw $ra 4($sp)
lw $fp 8($sp)
la $a0 str_23
li $v0 4
syscall
lw $a0 268501984
li $v0 1
syscall
la $a0 str_newline
li $v0 4
syscall
lw $t0 0($fp)
lw $t1 268501984
bne $t0 $t1 if_17_else
la $a0 str_24
li $v0 4
syscall
addi $sp $sp 12
jr $ra
if_17_else:
la $a0 str_25
li $v0 4
syscall
addi $sp $sp 12
jr $ra
func_test:
move $fp $sp
subi $sp $sp 24
li $t0 0
sw $t0 -4($fp)
li $t0 9
sw $t0 -8($fp)
while_7_beg:
lw $t0 -4($fp)
lw $t1 -8($fp)
bge $t0 $t1 while_7_end
li $v0 5
syscall
sw $v0 0($fp)
lw $t0 0($fp)
li $t1 0
bne $t0 $t1 case_2_1_end
la $a0 str_26
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_recursion
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_1_end:
lw $t0 0($fp)
li $t1 1
bne $t0 $t1 case_2_2_end
la $a0 str_27
li $v0 4
syscall
li $t0 20
sw $t0 0($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_if
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_2_end:
lw $t0 0($fp)
li $t1 2
bne $t0 $t1 case_2_3_end
la $a0 str_28
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_while
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_3_end:
lw $t0 0($fp)
li $t1 3
bne $t0 $t1 case_2_4_end
la $a0 str_29
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_switch
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_4_end:
lw $t0 0($fp)
li $t1 4
bne $t0 $t1 case_2_5_end
la $a0 str_30
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_scanf_printf
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_5_end:
lw $t0 0($fp)
li $t1 5
bne $t0 $t1 case_2_6_end
la $a0 str_31
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_expression
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_6_end:
lw $t0 0($fp)
li $t1 6
bne $t0 $t1 case_2_7_end
la $a0 str_32
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_symbol
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_7_end:
lw $t0 0($fp)
li $t1 7
bne $t0 $t1 case_2_8_end
la $a0 str_33
li $v0 4
syscall
li $t0 3
sw $t0 0($sp)
li $t0 6
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_relation_operator
lw $ra 4($sp)
lw $fp 8($sp)
li $t0 7
sw $t0 0($sp)
li $t0 5
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_relation_operator
lw $ra 4($sp)
lw $fp 8($sp)
li $t0 2
sw $t0 0($sp)
li $t0 2
sw $t0 -4($sp)
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_relation_operator
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_8_end:
lw $t0 0($fp)
li $t1 8
bne $t0 $t1 case_2_9_end
la $a0 str_34
li $v0 4
syscall
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test_scope
lw $ra 4($sp)
lw $fp 8($sp)
j case_2_end
case_2_9_end:
case_2_end:
la $a0 str_35
li $v0 4
syscall
li $t1 1
lw $t2 -4($fp)
add $t0 $t1 $t2
sw $t0 -12($fp)
lw $t0 -12($fp)
sw $t0 -4($fp)
j while_7_beg
while_7_end:
li $t0 95
sw $t0 268501988
la $a0 str_36
li $v0 4
syscall
lw $a0 268501988
li $v0 11
syscall
la $a0 str_newline
li $v0 4
syscall
la $a0 str_37
li $v0 4
syscall
addi $sp $sp 24
jr $ra
main:
move $fp $sp
subi $sp $sp 8
sw $ra 4($sp)
sw $fp 8($sp)
jal func_test
lw $ra 4($sp)
lw $fp 8($sp)
li $v0 10
syscall
