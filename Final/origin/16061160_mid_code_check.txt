char = cha const 'a'
char = chb const 'b'
char = CHA const 'A'
char = CHB const 'B'
int = I const 3
int = c var 
int = d var 
int = abc array 
int = i var 
int = expre function 
int = a para 
int = b para 
int = x para 
int = y para 
int = z para 
$T0 = i + 1
i = $T0  
c = 0  
if_1_else = i bge 3
$T1 = a + b
$T2 = $T1 * x
$T3 = 0 - $T2
$T4 = y * z
$T5 = $T3 - $T4
$T6 = 0 - 1
$T7 = $T5 - $T6
$T8 = $T7 + 'b'
a =  push 
b =  push 
x =  push 
y =  push 
z =  push 
expre =  call 
$T9 = RET  
$T10 = $T8 + $T9
c = $T10  
if_1_else: =   
" test_expression c=" =  write 
c =  write 
c =  ret 
 =  funcend 
void = test_if function 
int = a para 
int = b para 
int = temp var 
temp = 0  
if_2_else = a blt b
while_1_beg: =   
while_1_end = a ble b
temp = a  
a = b  
b = temp  
while_1_beg =  j 
while_1_end: =   
if_3_else = a bne b
if_3_else: =   
if_2_else: =   
if_4_else = a bge b
if_4_else: =   
" test_if output the less one " =  write 
"output " =  write 
a =  write 
 =  funcend 
void = test_while function 
i = 0  
abc[0] = 0  
abc[1] = 0  
abc[2] = 0  
while_2_beg: =   
while_2_end = i bgt 3
if_5_else = i beq 2
if_5_else: =   
if_6_else = i bne 2
$T0 = i * i
$T1 = i + $T0
abc[i] = $T1  
$T2 = i + 1
i = $T2  
if_6_else: =   
$T3 = i + 1
i = $T3  
while_2_beg =  j 
while_2_end: =   
" test_while output a[0] a[1] a[2]:" =  write 
abc[0] =  write 
"  " =  write 
abc[1] =  write 
"  " =  write 
abc[2] =  write 
 =  funcend 
char = test_switch function 
char = flag var 
" test_switch input one char:a or b  " =  write 
flag =  read 
case_1_1_end = flag bne 'a'
"  " =  write 
97 =  write 
" " =  write 
$T0 = 65 + 97
$T0 =  write 
case_1_end =  j 
case_1_1_end: =   
case_1_2_end = flag bne 'b'
"  " =  write 
98 =  write 
" " =  write 
$T1 = 66 + 98
$T1 =  write 
case_1_end =  j 
case_1_2_end: =   
case_1_end: =   
'F' =  ret 
 =  funcend 
int = fun1 function 
char = a para 
int = b para 
$T0 = a - b
$T0 =  ret 
 =  funcend 
void = test_scanf_printf function 
char = a var 
char = b var 
" enter:" =  write 
a =  read 
b =  read 
"  " =  write 
a =  push 
32 =  push 
fun1 =  call 
$T0 = RET  
$T0 =  write 
"  " =  write 
b =  push 
32 =  push 
fun1 =  call 
$T1 = RET  
$T1 =  write 
 =  funcend 
char = test_return function 
test_switch =  call 
$T0 = RET  
$T0 =  ret 
 =  funcend 
void = test function 
int = flag var 
char = ch var 
flag =  read 
case_2_1_end = flag bne 1
i = 0  
2 =  push 
3 =  push 
4 =  push 
5 =  push 
6 =  push 
expre =  call 
case_2_end =  j 
case_2_1_end: =   
case_2_2_end = flag bne 2
2 =  push 
3 =  push 
test_if =  call 
test_while =  call 
test_switch =  call 
case_2_end =  j 
case_2_2_end: =   
case_2_3_end = flag bne 3
test_scanf_printf =  call 
case_2_end =  j 
case_2_3_end: =   
case_2_4_end = flag bne 4
test_return =  call 
$T0 = RET  
ch = $T0  
"  " =  write 
ch =  write 
case_2_end =  j 
case_2_4_end: =   
"error input!@#$%%^&/|\{[('')]}~" =  write 
case_2_end: =   
 =  funcend 
void = main function 
test =  call 
 =  exit 
